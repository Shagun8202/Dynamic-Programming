#include <bits/stdc++.h>
int mod = (int)(1e9+7);
int solve(int n,int tar,vector<int> &arr,
    vector<vector<int>> &dp){
  if (n == 0) {
    if (tar == 0 && arr[0] == 0)
          return 2;
    if (arr[0] == tar || tar==0)
          return 1;
          return 0;
  }
  if (dp[n][tar] != -1){
             return dp[n][tar];
}
  int nt = solve(n-1,tar,arr,dp);
  int t = 0;
  if(arr[n]<=tar){
      t = solve(n-1,tar-arr[n],arr,dp);
  }

return dp[n][tar] = (t + nt)%mod;
 }
int countPartitions(int n, int d, vector<int> &arr) {
   int ts=0;
    for(int i= 0;i<n;i++){
    ts += arr[i];
    }
    
   
   if(ts-d<0 || (ts-d)%2) 
   return false;

   int tar = (ts-d)/2;
  vector<vector<int>> dp(n,vector<int>(tar+1,-1));
  int ans = solve(n-1,tar,arr,dp);
    
    return ans;

}


