bool solve3(int n,vector<int> &arr,int k){
     vector<bool> front(k+1,0);
     vector<bool> curr(k+1,0);

    front[0] = true;
    curr[0]=true;
  front[arr[0]]=true;
  for(int i=1;i<n;i++){
      for(int j =1;j<=k;j++){
       bool take = false;
      if(arr[i]<=j)
      take =front[j-arr[i]];
      bool nottake = front[j];
       curr[j]=take|nottake;
      }
      front=curr;
  }

return front[k];

}

bool canPartition(vector<int> &arr, int n)
{
	int sum = 0;
	for(int i = 0;i<arr.size();i++){
		sum = sum+arr[i];
	}
	if(sum%2 != 0){
		return false;
	}
	else{
		int ans = solve3( n,arr,sum/2);
	return ans;

	}
	
}
