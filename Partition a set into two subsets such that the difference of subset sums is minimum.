#include <bits/stdc++.h> 
#include <math.h>
int solve2(int n,int k,vector<int> &arr,int total){
     vector<vector<bool>> dp(n,vector<bool>(k+1,0));
     for(int i=0;i<n;i++){
         dp[i][0] = true;
     }
  if(arr[0]<=k) dp[0][arr[0]]=true;
  for(int i=1;i<n;i++){
    for (int j = 1; j <= k; j++) {
      bool take = false;
      if (arr[i] <= j)
        take = dp[i - 1][j - arr[i]];
      bool nottake = dp[i - 1][j];
      dp[i][j] = take | nottake;
    }
  }
  int mini = 1e9 ;
  for(int c =0;c<=total/2;c++){
	  if(dp[n-1][c]==true){
		  int diff = abs(c- (total- c));
      mini = min(mini, diff);
	  }
  }
  return mini;
}

int minSubsetSumDifference(vector<int>& arr, int n)
{
	int sum = 0;
	for(int i=0;i<arr.size();i++){
		sum = sum+arr[i];
	}
	int ans = solve2(n,sum,arr,sum);
	return ans;
}
